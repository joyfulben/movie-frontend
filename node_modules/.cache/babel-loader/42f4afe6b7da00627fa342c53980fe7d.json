{"ast":null,"code":"var _jsxFileName = \"/Users/benfisher/Desktop/examples/movie-critique/src/App.js\";\nimport React from 'react'; // import {BrowserRouter as Router, Route, Link} from 'react-router-dom'\n//\n// import './css/bulma.min.css';\n// import './css/App.css';\n// import secret from './secret.js'\n// import MyMovies from './Components/MyMovies.js'\n// import UpdateForm from './Components/UpdateForm.js'\n// import NewForm from './Components/NewForm.js'\n// import NavBar from './Components/Navbar'\n//\n// import SearchBar from './Components/SearchBar'\n// import MovieDisplay from './Components/ExternalMovieDisplay.js'\n// let baseURL = ''\n// let extURL = ''\n// if (process.env.NODE_ENV === 'development'){\n//   baseURL = secret.apikey\n//   extURL = secret.extkey\n// } else {\n//   baseURL = 'https://movie-critique-backend.herokuapp.com/'\n// }\n\nexport default class App extends React.Component {\n  // constructor(props){\n  //   super(props)\n  //   this.state = {\n  //     externalMovies: [],\n  //     storedMovies: []\n  //   }\n  //  this.handleAddExternal = this.handleAddExternal.bind(this)\n  //  this.handleAddInternal = this.handleAddInternal.bind(this)\n  //  this.getSavedMovies = this.getSavedMovies.bind(this)\n  //  this.removeReview = this.removeReview.bind(this)\n  //  this.updateReviewState = this.updateReviewState.bind(this)\n  // }\n  // componentDidMount(){\n  //   this.getSavedMovies()\n  //\n  // }\n  // async getSavedMovies(){\n  //   try {\n  //     let response = await fetch(extURL + '/reviews')\n  //     let InternalData = await response.json()\n  //     this.setState({storedMovies: InternalData})\n  //   } catch (e) {\n  //     console.error(e);\n  //   }\n  // }\n  // async handleAddExternal(movie){\n  //   try {\n  //     console.log(movie);\n  //     let updatedMovieList = movie\n  //     this.setState({externalMovies: updatedMovieList})\n  //   } catch (e) {\n  //     console.error(e);\n  //   }\n  // }\n  // async handleAddInternal(movie){\n  //   console.log(movie);\n  //   let updatedSavedList = [movie, ...this.state.storedMovies]\n  //   this.setState({storedMovies: updatedSavedList})\n  // }\n  //  async removeReview(id){\n  //    try {\n  //      const foundReview = this.state.storedMovies.findIndex(review =>\n  //      review._id === id)\n  //      const copyReviews = [...this.state.storedMovies]\n  //      copyReviews.splice(foundReview, 1)\n  //      this.setState({storedMovies: copyReviews})\n  //  } catch (error) {\n  //        console.error(error)\n  //    }\n  //  }\n  //  async updateReviewState(updateReview){\n  //    try {\n  //      const foundReviewIndex = this.state.storedMovies.findIndex(foundReview => {\n  //      return foundReview._id === updateReview._id\n  //  })\n  //      const copyReviews = [...this.state.storedMovies]\n  //      let updatedReview = updateReview\n  //      copyReviews[foundReviewIndex] = updatedReview\n  //      this.setState({\n  //          storedMovies: copyReviews\n  //      })\n  //    } catch (e) {\n  //      console.error(e);\n  //    }\n  //  }\n  render() {\n    return (// <>\n      React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"hello world\") // <Router>\n      //   <div>\n      //     <NavBar />\n      //     <Route exact path='/my_movies' component={() => <MyMovies storedMovies={this.state.storedMovies} extURL={extURL} toggleForm={this.toggleForm} updateReviewState={this.updateReviewState} removeReview={this.removeReview}\n      //       />} />\n      //     <Route path='/new' exact component={NewForm} />\n      //     <Route exact path='/' component={() => <><SearchBar handleAddExternal={this.handleAddExternal} baseURL={baseURL} /><MovieDisplay externalMovies={this.state.externalMovies} extURL={extURL} handleAddInternal={this.handleAddInternal} /> </>\n      //           } />\n      //   </div>\n      //     </Router>\n      // </>\n\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/benfisher/Desktop/examples/movie-critique/src/App.js"],"names":["React","App","Component","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC,eAAe,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAiC;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACHC,EAAAA,MAAM,GAAE;AACN,WACE;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG;;AAbD;AAcC;;AAlF8C","sourcesContent":["import React from 'react';\n// import {BrowserRouter as Router, Route, Link} from 'react-router-dom'\n//\n// import './css/bulma.min.css';\n// import './css/App.css';\n// import secret from './secret.js'\n// import MyMovies from './Components/MyMovies.js'\n// import UpdateForm from './Components/UpdateForm.js'\n// import NewForm from './Components/NewForm.js'\n// import NavBar from './Components/Navbar'\n//\n// import SearchBar from './Components/SearchBar'\n// import MovieDisplay from './Components/ExternalMovieDisplay.js'\n// let baseURL = ''\n// let extURL = ''\n// if (process.env.NODE_ENV === 'development'){\n//   baseURL = secret.apikey\n//   extURL = secret.extkey\n// } else {\n//   baseURL = 'https://movie-critique-backend.herokuapp.com/'\n// }\n\n export default class App extends React.Component{\n\n   // constructor(props){\n   //   super(props)\n   //   this.state = {\n   //     externalMovies: [],\n   //     storedMovies: []\n   //   }\n   //  this.handleAddExternal = this.handleAddExternal.bind(this)\n   //  this.handleAddInternal = this.handleAddInternal.bind(this)\n   //  this.getSavedMovies = this.getSavedMovies.bind(this)\n   //  this.removeReview = this.removeReview.bind(this)\n   //  this.updateReviewState = this.updateReviewState.bind(this)\n   // }\n   // componentDidMount(){\n   //   this.getSavedMovies()\n   //\n   // }\n   // async getSavedMovies(){\n   //   try {\n   //     let response = await fetch(extURL + '/reviews')\n   //     let InternalData = await response.json()\n   //     this.setState({storedMovies: InternalData})\n   //   } catch (e) {\n   //     console.error(e);\n   //   }\n   // }\n   // async handleAddExternal(movie){\n   //   try {\n   //     console.log(movie);\n   //     let updatedMovieList = movie\n   //     this.setState({externalMovies: updatedMovieList})\n   //   } catch (e) {\n   //     console.error(e);\n   //   }\n   // }\n   // async handleAddInternal(movie){\n   //   console.log(movie);\n   //   let updatedSavedList = [movie, ...this.state.storedMovies]\n   //   this.setState({storedMovies: updatedSavedList})\n   // }\n   //  async removeReview(id){\n   //    try {\n   //      const foundReview = this.state.storedMovies.findIndex(review =>\n   //      review._id === id)\n   //      const copyReviews = [...this.state.storedMovies]\n   //      copyReviews.splice(foundReview, 1)\n   //      this.setState({storedMovies: copyReviews})\n   //  } catch (error) {\n   //        console.error(error)\n   //    }\n   //  }\n   //  async updateReviewState(updateReview){\n   //    try {\n   //      const foundReviewIndex = this.state.storedMovies.findIndex(foundReview => {\n   //      return foundReview._id === updateReview._id\n   //  })\n   //      const copyReviews = [...this.state.storedMovies]\n   //      let updatedReview = updateReview\n   //      copyReviews[foundReviewIndex] = updatedReview\n   //      this.setState({\n   //          storedMovies: copyReviews\n   //      })\n   //    } catch (e) {\n   //      console.error(e);\n   //    }\n   //  }\nrender(){\n  return(\n    // <>\n    <h2>hello world</h2>\n// <Router>\n//   <div>\n//     <NavBar />\n//     <Route exact path='/my_movies' component={() => <MyMovies storedMovies={this.state.storedMovies} extURL={extURL} toggleForm={this.toggleForm} updateReviewState={this.updateReviewState} removeReview={this.removeReview}\n//       />} />\n//     <Route path='/new' exact component={NewForm} />\n//     <Route exact path='/' component={() => <><SearchBar handleAddExternal={this.handleAddExternal} baseURL={baseURL} /><MovieDisplay externalMovies={this.state.externalMovies} extURL={extURL} handleAddInternal={this.handleAddInternal} /> </>\n//           } />\n//   </div>\n//     </Router>\n   // </>\n )}\n}\n"]},"metadata":{},"sourceType":"module"}
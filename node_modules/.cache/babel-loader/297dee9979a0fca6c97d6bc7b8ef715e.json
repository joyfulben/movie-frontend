{"ast":null,"code":"var _jsxFileName = \"/Users/benfisher/Desktop/examples/movie-critique/src/Components/MyMovie.js\";\nimport React from 'react';\nimport UpdateForm from './UpdateForm.js';\nexport default class MyMovie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPlot: false,\n      review: '',\n      showForm: false,\n      showPlot: false\n    };\n    this.toggleForm = this.toggleForm.bind(this);\n    this.removeReview = this.removeReview.bind(this);\n    this.updateReview = this.updateReview.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.togglePlot = this.togglePlot.bind(this);\n  }\n\n  toggleForm() {\n    this.setState({\n      showForm: !this.state.showForm\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  togglePlot() {\n    this.setState({\n      showPlot: !this.state.showPlot\n    });\n  }\n\n  async updateReview(event, review) {\n    console.log(review);\n    event.preventDefault();\n\n    try {\n      let response = await fetch(`${this.props.extURL}/reviews/${review.id}`, {\n        body: JSON.stringify(review),\n        method: 'PUT',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      let updateReview = await response.json();\n      this.props.updateReviewState(updateReview);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async removeReview(id) {\n    try {\n      let response = await fetch(this.props.extURL + '/reviews/' + id, {\n        method: 'DELETE'\n      });\n      let data = await response.json();\n      this.props.removeReview(data._id);\n      console.log(id);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    const {\n      rating\n    } = this.state;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"my-movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"my-image\",\n      src: `https://image.tmdb.org/t/p/w600_and_h900_bestv2${this.props.movie.poster_path}`,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"my-title hero is-small is-warning is-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.props.movie.title), React.createElement(\"h2\", {\n      className: \"my-review\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.props.movie.review), this.state.showForm ? React.createElement(UpdateForm, {\n      storedMovie: this.props.storedMovies[this.props.i],\n      updateReview: this.updateReview,\n      review: this.state.review,\n      toggleForm: this.toggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.toggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Create Review\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"my-plot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.togglePlot,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Plot Summary\"), React.createElement(\"button\", {\n      onClick: () => this.removeReview(this.props.movie._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"X\")), this.state.showPlot ? React.createElement(\"p\", {\n      className: \"my-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.props.movie.overview) : null)));\n  }\n\n}","map":{"version":3,"sources":["/Users/benfisher/Desktop/examples/movie-critique/src/Components/MyMovie.js"],"names":["React","UpdateForm","MyMovie","Component","constructor","props","state","showPlot","review","showForm","toggleForm","bind","removeReview","updateReview","handleChange","togglePlot","setState","event","target","name","value","console","log","preventDefault","response","fetch","extURL","id","body","JSON","stringify","method","headers","json","updateReviewState","error","data","_id","render","rating","movie","poster_path","title","storedMovies","i","overview"],"mappings":"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","sourcesContent":["import React from 'react'\nimport UpdateForm from './UpdateForm.js'\n\nexport default class MyMovie extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showPlot: false,\n      review: '',\n      showForm: false,\n      showPlot: false\n    }\n    this.toggleForm = this.toggleForm.bind(this)\n    this.removeReview = this.removeReview.bind(this)\n    this.updateReview = this.updateReview.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.togglePlot = this.togglePlot.bind(this)\n    }\n    toggleForm(){\n     this.setState({showForm: !this.state.showForm})\n    }\n    handleChange(event){\n      this.setState({\n          [event.target.name]: event.target.value\n      })\n    }\n    togglePlot () {\n      this.setState({showPlot: !this.state.showPlot})\n    }\n    async updateReview(event, review){\n      console.log(review);\n      event.preventDefault()\n      try{\n          let response = await fetch(`${this.props.extURL}/reviews/${review.id}`, {\n              body: JSON.stringify(review),\n              method: 'PUT',\n              headers: {\n                  'Accept': 'application/json, text/plain, */*',\n                  'Content-Type': 'application/json',\n                  'Access-Control-Allow-Origin': '*'\n              }\n          })\n          let updateReview = await response.json()\n          this.props.updateReviewState(updateReview)\n      } catch(error){\n          console.log(error);\n      }\n    }\n    async removeReview (id){\n      try{\n          let response = await fetch(this.props.extURL + '/reviews/' + id, {\n             method: 'DELETE'\n         })\n         let data = await response.json()\n         this.props.removeReview(data._id)\n         console.log(id);\n     } catch(error){\n         console.error(error);\n     }\n    }\n  render(){\n  const { rating } = this.state;\n    return(\n      <>\n          <div className=\"my-movie\">\n            <img className=\"my-image\" src={`https://image.tmdb.org/t/p/w600_and_h900_bestv2${this.props.movie.poster_path}`} alt=\"\"/>\n            <div>\n              <h2 className=\"my-title hero is-small is-warning is-bold\">{this.props.movie.title}</h2>\n              <h2 className=\"my-review\">{this.props.movie.review}</h2>\n               {this.state.showForm\n                 ? <UpdateForm storedMovie={this.props.storedMovies[this.props.i]} updateReview={this.updateReview} review={this.state.review} toggleForm={this.toggleForm}/>\n                 : <div></div>}\n\n               <button onClick={this.toggleForm}>Create Review</button> <br/>\n               <div className=\"my-plot\">\n               <button onClick={this.togglePlot}>Plot Summary</button>\n               <button onClick={()=>this.removeReview(this.props.movie._id)}>X</button>\n               </div>\n               {this.state.showPlot ?\n                 <p className=\"my-text\">{this.props.movie.overview}</p> :\n                 null\n               }\n\n\n            </div>\n          </div>\n      </>\n    )\n  }\n }\n"]},"metadata":{},"sourceType":"module"}